###########
#Cromwell configuration file for SGE backend that includes standad job submission and docker jobs for Univa
#
#In Cromwell's default configuration, docker tasks are launched locally (docker pull image_ID; docker run image_ID; docker image rm)
#The present configuration file overrides the default configuration so that each docker task is executed trhough a docker Univa job (qsub -l docker,docker_images=*ubuntu:latest*")
#
#Requirements for docker:
#	The Cromwell configuration file must include the following run-time attributes: sge_project (remember to set a valid project name), docker and docker_uge
#   Univa requires in the format docker image names in the format *ubuntu:latest* (asterisks are necessary for node lookup)
#
#	In the WDL workflow, each task of the runtime section must include:
#		docker: "ubuntu:latest"  				#a valid docker_id that passes Cromwell's hash lookup, this value is later ignored
#		docker_uge: "oicr-gsi/workflow:latest" 	#the actual docker_id with no asterisks
#		
###########

include required(classpath("application"))

backend {
  default = SGE
  providers {
    SGE {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        concurrent-job-limit = 100

        runtime-attributes = """
        Int cpu = 1
        Float? memory_gb
        String? sge_queue
        String sge_project = "default_sge_project_name"
		String? docker
		String? docker_uge
        """

        submit = """
        qsub \
        -terse \
        -b y \
        -N ${job_name} \
        -wd ${cwd} \
        -o ${out} \
        -e ${err} \
        -pe smp ${cpu} \
        ${"-l mem_free=" + memory_gb + "g"} \
		-P gsi
        /usr/bin/env bash ${script}
        """
		
		submit-docker = """
        qsub \
			-P ${sge_project} \
            -N ${job_name} \
            -wd ${cwd} \
            -o ${out}.qsub \
            -e ${err}.qsub \
            -l docker,docker_images="*${docker_uge}*" \
            -xd "-v ${cwd}:${docker_cwd}" \
            ${script}
        """


        job-id-regex = "(\\d+)"

        kill = "qdel ${job_id}"
        check-alive = "qstat -j ${job_id}"
      }
    }
  }
}
